// @generated by protobuf-ts 2.8.2 with parameter use_proto_field_name
// @generated from protobuf file "proto/alltypetable.api.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AllTypeTableService } from "./alltypetable.api";
import type { ListAllTypeTablesResp } from "./alltypetable.api";
import type { ListAllTypeTablesReq } from "./alltypetable.api";
import type { UpdateAllTypeTableReq } from "./alltypetable.api";
import type { Empty } from "../google/protobuf/empty";
import type { AllTypeTableId } from "./alltypetable.api";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { AllTypeTable } from "./alltypetable.api";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service AllTypeTableService
 */
export interface IAllTypeTableServiceClient {
    /**
     * @generated from protobuf rpc: CreateAllTypeTable(AllTypeTable) returns (AllTypeTable);
     */
    createAllTypeTable(input: AllTypeTable, options?: RpcOptions): UnaryCall<AllTypeTable, AllTypeTable>;
    /**
     * @generated from protobuf rpc: DeleteAllTypeTable(AllTypeTableId) returns (google.protobuf.Empty);
     */
    deleteAllTypeTable(input: AllTypeTableId, options?: RpcOptions): UnaryCall<AllTypeTableId, Empty>;
    /**
     * @generated from protobuf rpc: UpdateAllTypeTable(UpdateAllTypeTableReq) returns (AllTypeTable);
     */
    updateAllTypeTable(input: UpdateAllTypeTableReq, options?: RpcOptions): UnaryCall<UpdateAllTypeTableReq, AllTypeTable>;
    /**
     * @generated from protobuf rpc: GetAllTypeTable(AllTypeTableId) returns (AllTypeTable);
     */
    getAllTypeTable(input: AllTypeTableId, options?: RpcOptions): UnaryCall<AllTypeTableId, AllTypeTable>;
    /**
     * @generated from protobuf rpc: ListAllTypeTables(ListAllTypeTablesReq) returns (ListAllTypeTablesResp);
     */
    listAllTypeTables(input: ListAllTypeTablesReq, options?: RpcOptions): UnaryCall<ListAllTypeTablesReq, ListAllTypeTablesResp>;
}
/**
 * @generated from protobuf service AllTypeTableService
 */
export class AllTypeTableServiceClient implements IAllTypeTableServiceClient, ServiceInfo {
    typeName = AllTypeTableService.typeName;
    methods = AllTypeTableService.methods;
    options = AllTypeTableService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateAllTypeTable(AllTypeTable) returns (AllTypeTable);
     */
    createAllTypeTable(input: AllTypeTable, options?: RpcOptions): UnaryCall<AllTypeTable, AllTypeTable> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<AllTypeTable, AllTypeTable>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteAllTypeTable(AllTypeTableId) returns (google.protobuf.Empty);
     */
    deleteAllTypeTable(input: AllTypeTableId, options?: RpcOptions): UnaryCall<AllTypeTableId, Empty> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<AllTypeTableId, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateAllTypeTable(UpdateAllTypeTableReq) returns (AllTypeTable);
     */
    updateAllTypeTable(input: UpdateAllTypeTableReq, options?: RpcOptions): UnaryCall<UpdateAllTypeTableReq, AllTypeTable> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateAllTypeTableReq, AllTypeTable>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAllTypeTable(AllTypeTableId) returns (AllTypeTable);
     */
    getAllTypeTable(input: AllTypeTableId, options?: RpcOptions): UnaryCall<AllTypeTableId, AllTypeTable> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<AllTypeTableId, AllTypeTable>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListAllTypeTables(ListAllTypeTablesReq) returns (ListAllTypeTablesResp);
     */
    listAllTypeTables(input: ListAllTypeTablesReq, options?: RpcOptions): UnaryCall<ListAllTypeTablesReq, ListAllTypeTablesResp> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListAllTypeTablesReq, ListAllTypeTablesResp>("unary", this._transport, method, opt, input);
    }
}
